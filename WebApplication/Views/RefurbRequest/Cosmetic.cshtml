@using WebApplication.Attributes

@model WebApplication.Models.Application.Cosmetic
@{
    ViewBag.Title = "Cosmetic";
    ViewBag.SubTitle = "Request";
    var RequestId = ViewContext.RouteData.Values["id"];
}


@section submenu {left-sidebar-menu-refurbs-new-request}

<div class="row">
    <div class="col-md-8">
        <div class="box box box-primary">
            <div class="box-header with-border">
                <h3 class="box-title">Cosmetic for request #@ViewBag.Request.Id</h3>
            </div>
            @RenderPage("~/Views/RefurbRequest/_details.cshtml")
            @if (@ViewBag.Message != null)
            {
                <div class="box-body">
                    <div class="alert alert-danger alert-dismissible">
                        <button type="button" class="close" data-dismiss="alert" aria-hidden="true">&times;</button>
                        <h4><i class="icon fa fa-ban"></i> Alert!</h4>
                        <p>
                            @Html.Raw(ViewBag.Message)
                        </p>

                    </div>
                </div>
            }

            @using (Html.BeginForm("Cosmetic", "RefurbRequest", FormMethod.Post, new { enctype = "multipart/form-data" }))
            {
                @Html.AntiForgeryToken()
                <div class="box-body">
                    @Html.ValidationSummary(true)
                    @Html.HiddenFor(model => model.RequestId)
                    @Html.HiddenFor(model => model.UserId)
                    @Html.HiddenFor(model => model.Date)

                    @if (ViewBag.Request.StatusCosmetic == null)
                    {
                        <div class="form-group">
                            @Html.LabelFor(model => model.SupplyId, new { @class = "" })
                            @Html.DropDownListFor(x => x.SupplyId, (SelectList)ViewBag.Supplies, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.SupplyId)
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Description, new { @class = "" })
                            @Html.EditorFor(x => x.Description, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Description)
                        </div>
                    }
                    else
                    {
                        <div class="form-group">
                            <label class="btn-block">Cosmetic Status</label>
                            <span>@ViewBag.Request.StatusCosmetic</span>
                        </div>
                    }

                </div>


                <div class="box-footer">
                    <div class="box-btn-group">
                        @if (ViewBag.Request.StatusCosmetic == null)
                        {
                            <span class="pull-left">
                                <input type="submit" name="Action" value="Send back to Trial" class="btn btn-danger" />
                            </span>

                            <span class="pull-right">
                                @if (User.HasPermissions("CosmeticStatus", "Read"))
                                {
                                    @Html.ActionLink("Put On Hold", "Hold", "CosmeticStatus", new { RequestId = Model.RequestId }, new { @class = "btn btn-warning" })
                                }

                                @if (User.HasPermissions("RefurbRequest", "Write"))
                                {
                                    <input type="submit" name="Action" value="Send to Final Inspection" class="btn btn-success" />
                                }
                            </span>
                        }
                        else
                        {
                            <span class="pull-left">
                                @if (User.HasPermissions("CosmeticStatus", "Read"))
                                {
                                    @Html.ActionLink("Remove From Hold", "Remove", "CosmeticStatus", new { RequestId = Model.RequestId }, new { @class = "btn btn-warning" })
                                }

                            </span>

                            <span class="pull-right">
                                @if (User.HasPermissions("CosmeticStatus", "Read"))
                                {
                                    @Html.ActionLink("Edit Cosmetic Status", "Hold", "CosmeticStatus", new { RequestId = Model.RequestId }, new { @class = "btn btn-success" })
                                }
                            </span>
                        }

                        <span class="clearfix"></span>
                    </div>

                    @Html.ActionLink("Go Back", "Index", new { }, new { @class = "btn btn-default" })
                </div>



            }
        </div>
    </div>
</div>



@section Scripts {
    <script>
        $(function () {
            $('input[type="datetime"]').datepicker(
                { format: 'dd/mm/yyyy', }
            );
        });
    </script>
}
